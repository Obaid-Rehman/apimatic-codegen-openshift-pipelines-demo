name: Set Up RedHat OpenShift Assets

on:
  workflow_dispatch:
    inputs:
      openshift_login_token:
        description: 'Login token to access OpenShift Cluster'
        required: true
        type: string
      openshift_login_server:
        description: 'Login server to access OpenShift Cluster'
        required: true
        type: string
      namespace:
        description: 'OpenShift Project Name to deploy assets to'
        required: true
        type: string
        default: 'pipelines-tutorial'
        
        
  
env:

  LOCATION: eastus
  RESOURCEGROUP: OpenShiftTest
  CLUSTER: cluster

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    
      - uses: actions/checkout@v3
          
      - name: Get OpenShift Tools
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: 'mirror'
          skip_cache: true
          oc: 'latest'
          tkn: 'latest'
          
      - name: Login to OpenShift Cluster
        run: oc login --token=${{ inputs.openshift_login_token }} --server=${{ inputs.openshift_login_server }}
        
      - name: Create Namespace if not exists
        run: |
          oc get ns ${{ inputs.namespace }} 2>/dev/null || oc new-project ${{ inputs.namespace }} --description='Project to configure pipelines demo in' --display-name:'APIMAtic CodeGen Pipelines Demo'
          oc project ${{ inputs.namespace }}
          
      - name: Apply pipeline tasks
        run: !
          oc apply -f .tekton/Pipeline/apply-manifest-task.yaml
          oc apply -f .tekton/Pipeline/update-deployment-task.yaml
          oc apply -f .tekton/Pipeline/get-portal-zip.yaml
          oc apply -f .tekton/Pipeline/zip_build-folder-task.yaml
          
      - name: Apply pipeline
        run: oc apply -f .tekton/Pipeline/pipeline.yaml
        
      - name: Echo pipeline
        run: tkn pipeline describe build-and-deploy ${{ inputs.namespace }} 
        
      
            
